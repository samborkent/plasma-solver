function createConfigFile( directory, folder, fileName, commentString, ...
    saveFiguresBool, plot2DBool, ...
    nMin, kMax, veloSmoothNonColBool, veloSmoothColBool, smoothWidth, keepParticleBool, ...
    time, angle, radius, velo, ...
    uc, ucRatio, targetDensity, absorption, ...
    bg, bgPressure, bgTemperature, bgDensity, ...
    spotWidth, spotHeight, ablationDepth, ablationVolume, laserFluence, energyLaser, heatTarget, ...
    cosPowerFit, initVeloDisWidth, ...
    nPlasmaTotal, nBGTotal, ...
    durationTotal )
%CREATECONFIGFILE Create a configuration file based on model parameters

% Generate file path
FILE_PATH = [directory '\' folder '\' fileName '_' ...
    datestr(now, 'yyyy-mm-dd_HHMM') '.txt'];

% Open file for writing
fileID = fopen(FILE_PATH, 'wt');

% Write information to file
fprintf(fileID, [ ...
    'CONFIGURATION FILE\t' datestr(now, 'yyyy-mm-dd\tHH:MM') '\n\n' ...
    '\tPreferences:\n' ...
    'Save figures:\t\t\t\t' num2str(saveFiguresBool) '\n' ...
    'Plot 2D results:\t\t\t' num2str(plot2DBool) '\n' ...
    '\tComputational restrictions:\n' ...
    'Minimal number of particless:\t\t' num2str(nMin, 3) '\n' ...
    'Maximum number of collisions:\t\t' num2str(kMax, 3) '\n' ...
    'Non-collided velocity smoothing:\t' num2str(veloSmoothNonColBool, 3) '\n' ...
    'Collided velocity smoothing:\t\t' num2str(veloSmoothColBool, 3) '\n' ...
    'Velocity smoothing width:\t\t' num2str(smoothWidth, 3) '\n' ...
    'Preserve particles in last radial bin:\t' num2str(keepParticleBool, 3) '\n' ...
    '\tDimensional limits:\n' ...
    'Temporal limits [s]:\t\t\t'     num2str(0) ...
                               ' : ' num2str(max(time) / (numel(time) - 1), 3) ...
                               '\t: ' num2str(max(time), 3) '\n' ...
    'Angular limits [deg]:\t\t\t'    num2str(0, 3) ...
                               ' : ' num2str(max(angle) / (numel(angle) - 1), 3) ...
                               '\t\t: ' num2str(max(angle), 3) '\n' ...
    'Radial limits [m]:\t\t\t'       num2str(0) ...
                               ' : ' num2str(max(radius) / (numel(radius) - 1), 3) ...
                               '\t: ' num2str(max(radius), 3) '\n' ...
    'Velocity limits [m/s]:\t\t\t'   num2str(0) ...
                               ' : ' num2str(max(velo) / (numel(velo) - 1), 3) ...
                               '\t\t: ' num2str(max(velo), 3) '\n' ...
    '\tMaterial parameters:\n' ...
    'Unit cell components:\t\t\t' [uc.FORMULA] '\n' ...
    'Unit cell ratio:\t\t\t[' num2str(ucRatio) ']\n' ...
    'Target density [kg / m^3]:\t\t' num2str(targetDensity, 3) '\n' ...
    'Ratio of energy absorbed:\t\t' num2str(absorption, 3) '\n' ...
    '\tBackground gas parameters:\n' ...
    'Background gas molecule [mbar]:\t\t' [bg.SYMBOL] '\n' ...
    'Background pressure [mbar]:\t\t' num2str(bgPressure, 3) '\n' ...
    'Background temperature [K]:\t\t' num2str(bgTemperature, 3) '\n' ...
    'Background gas density [m^-3]:\t\t' num2str(bgDensity, 3) '\n' ...
    '\tLaser parameters:\n' ...
    'Laser spot width [m]:\t\t\t' num2str(spotWidth, 3) '\n' ...
    'Laser spot height [m]:\t\t\t' num2str(spotHeight, 3) '\n' ...
    'Ablation depth [m]:\t\t\t' num2str(ablationDepth, 3) '\n' ...
    'Ablation volume [m^3]:\t\t\t' num2str(ablationVolume, 3) '\n' ...
    'Laser fluence [J / cm^2]:\t\t' num2str(laserFluence, 3) '\n' ...
    'Laser energy [J]:\t\t\t' num2str(energyLaser, 3) '\n' ...
    'Heat dissipation [J]:\t\t\t' num2str(heatTarget, 3) '\n' ...
    '\tModel parameters:\n' ...
    'Angular distribution fit parameter:\t' num2str(cosPowerFit, 3) '\n' ...
    'Initial velocity distribution width:\t' num2str(initVeloDisWidth, 3) '\n' ...
    '\tNumber of particles:\n' ...
    'Total number of plasma particles:\t' num2str(nPlasmaTotal, 3) '\n' ...
    'Total number of background particles:\t' num2str(nBGTotal, 3) '\n' ...
    '\tTimers:\n' ...
    'Total running time [s]:\t\t\t' num2str(durationTotal, 3) '\n' ...
    '\n\tComments:' '\n' commentString]);

fclose(fileID);
end
